swagger: "2.0"
info:
  description: Spring Practice project
  version: "1.0"
  title: Practice Spring
  termsOfService: Terms of service:...
  contact:
    name: Jose Sousa
    url: https://localhost:8080
    email: j.alves.sousa82@gmail.com
  license:
    name: Apache license 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: Customers Api
    description: Customer Controller
  - name: Vendors Api
    description: Vendor Controller
  - name: Categories Api
    description: Categories Controller
  - name: basic-error-controller
    description: Basic Error Controller
paths:
  /api/v1/categories/:
    get:
      tags:
        - Categories Api
      summary: getAllCategories
      operationId: getAllCategoriesUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /api/v1/categories/{name}:
    get:
      tags:
        - Categories Api
      summary: getCategoryByName
      operationId: getCategoryByNameUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CategoryDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /api/v1/customers/:
    get:
      tags:
        - Customers Api
      summary: This will get a list of customers.
      description: This are notes.
      operationId: getAllCustomersUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - Customers Api
      summary: createNewCustomer
      operationId: createNewCustomerUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: customerDTO
          description: customerDTO
          required: true
          schema:
            $ref: "#/definitions/CustomerDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CustomerDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /api/v1/customers/id/{id}:
    get:
      tags:
        - Customers Api
      summary: getCustomerById
      operationId: getCustomerByIdUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CustomerDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - Customers Api

      summary: updateCustomer
      operationId: updateCustomerUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: customerDTO
          description: customerDTO
          required: true
          schema:
            $ref: "#/definitions/CustomerDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CustomerDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - Customers Api

      summary: deleteCustomerById
      operationId: deleteCustomerByIdUsingDELETE
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
        - Customers Api

      summary: patchCustomer
      operationId: patchCustomerUsingPATCH
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: customerDTO
          description: customerDTO
          required: true
          schema:
            $ref: "#/definitions/CustomerDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CustomerDTO"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/v1/customers/name/{name}:
    get:
      tags:
        - Customers Api
      summary: getCustomerByName
      operationId: getCustomerByNameUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CustomerDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /api/v1/vendors/:
    get:
      tags:
        - Vendors Api
      summary: View list of vendors
      description: The are notes
      operationId: getAllVendorsUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - Vendors Api

      summary: Create new vendor
      description: The are notes
      operationId: createNewVendorUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: vendorDto
          description: vendorDto
          required: true
          schema:
            $ref: "#/definitions/VendorDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/VendorDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /api/v1/vendors/id/{id}:
    get:
      tags:
        - Vendors Api
      summary: Get vendor by id.
      description: The are notes
      operationId: getVendorByIdUsingGET
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/VendorDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - Vendors Api

      summary: Update existent vendor
      description: The are notes
      operationId: updateVendorUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: vendorDto
          description: vendorDto
          required: true
          schema:
            $ref: "#/definitions/VendorDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/VendorDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - Vendors Api

      summary: Delete existent vendor
      description: The are notes
      operationId: deleteVendorByIdUsingDELETE
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
        - Vendors Api

      summary: Update vendor property
      description: The are notes
      operationId: patchVendorUsingPATCH
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: vendorDto
          description: vendorDto
          required: true
          schema:
            $ref: "#/definitions/VendorDTO"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/VendorDTO"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
definitions:
  CategoryDTO:
    title: Category
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  CustomerDTO:
    title: Customer
    type: object
    required:
      - firstName
      - lastName
    properties:
      firstName:
        type: string
        description: This is the first name
      lastName:
        type: string
        description: This is the last name
  VendorDTO:
    title: Vendor
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Vendor Name

  
